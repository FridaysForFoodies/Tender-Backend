# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""A single ingredient for a recipe"""
type Ingredient {
  """
  The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.
  """
  ID: String!
  imagePath: String!
  name: String!
  searchCount: Int!
  yields: [Yield!]!
}

type InstructionStep {
  imageCaption: String
  imagePath: String
  instructions: String!
}

type Mutation {
  addRecipeToFavourites(recipeId: String!): Recipe
  setRecipePreferencesForUser(preferences: RecipePreferencesInput!): RecipePreferences!
}

type Query {
  findFavouriteRecipes: [Recipe!]!
  findRecipe(recipeId: String!): Recipe
  findTags(skip: Int = 0, take: Int = 5): [Tag!]!
  generateUser: User!
  ingredientSuggestions(count: Float = 5, query: String!): [Ingredient!]
  personalCommonIngredients(count: Float = 5): [Ingredient!]!
  popularIngredients(count: Float = 5): [Ingredient!]!
  recipePreferencesForUser: RecipePreferences!
  searchForRecipes(searchOptions: SearchOptionsInput!, skip: Int = 0, take: Int = 25): [Recipe!]!
}

type Recipe {
  description: String
  difficulty: Int!
  duration: Int!

  """
  The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.
  """
  ID: String!
  imagePath: String!
  ingredients: [Ingredient!]
  instructionSteps: [InstructionStep!]
  missingIngredients: [Ingredient!]
  name: String!
  subtitle: String
  tags: [String!]
  yieldOptions: [Int!]!
}

type RecipePreferences {
  cookingTime: Int!
  glutenfree: Boolean!
  lactosefree: Boolean!
  user: User!
  vegan: Boolean!
  vegetarian: Boolean!
}

input RecipePreferencesInput {
  cookingTime: Int!
  glutenfree: Boolean!
  lactosefree: Boolean!
  vegan: Boolean!
  vegetarian: Boolean!
}

input SearchOptionsInput {
  ingredients: [String!]!
  preferenceTagsExclude: [String!]!
  preferenceTagsInclude: [String!]!
  tags: [String!]!
}

type Tag {
  id: ID!
  imagePath: String!
  name: String!
}

type User {
  uuid: ID!
}

type Yield {
  amount: Float!
  unit: String!
  yields: Int!
}
